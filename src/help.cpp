#ifdef FIM_WANT_INLINE_HELP

fim_var_help_db[FIM_VID_BINARY_DISPLAY]= "if nonzero : if 1, will force loading of images as pixelmaps of bits; if 24, will force loading of images as 24 bit pixelmaps" ;
fim_var_help_db[FIM_VID_CACHE_STATUS]= "informations on current cache status" ;
fim_var_help_db[FIM_VID_DISPLAY_CONSOLE]= "if 1, will display the output console" ;
fim_var_help_db[FIM_VID_DEVICE_DRIVER]= "a string with the current output driver name" ;
fim_var_help_db[FIM_VID_DISPLAY_STATUS]= "if 1, will display the status bar" ;
fim_var_help_db[FIM_VID_SANITY_CHECK]= "if 1, will execute a sanity check on startup (experimental)" ;
fim_var_help_db[FIM_VID_LOAD_DEFAULT_ETC_FIMRC]= "if 1 at startup, will load /etc/fimrc, or equivalent system startup file" ;
fim_var_help_db[FIM_VID_NO_RC_FILE]= "if !=0, the ~/.fimrc file will not be executed" ;
fim_var_help_db[FIM_VID_SCRIPTOUT_FILE]= "the name of the file to write to when recording sessions" ;
fim_var_help_db[FIM_VID_STATUS_LINE]= "if 1, will display the status bar (!)" ;
fim_var_help_db[FIM_VID_WANT_PREFETCH]= "if 1, will prefetch files" ;
fim_var_help_db[FIM_VID_AUTO_SCALE_V]= "FIXME : unused ? (fixme : should be moved to fimrc's scope only)" ;
fim_var_help_db[FIM_VID_AUTOTOP]= "if 1, will align to the top freshly loaded images" ;
fim_var_help_db[FIM_VID_AUTOWIDTH]= "if 1, will scale freshly loaded images to fit width" ;
fim_var_help_db[FIM_VID_FILEINDEX]= "the current image numeric index" ;
fim_var_help_db[FIM_VID_FILELISTLEN]= "the length of the current image list" ;
fim_var_help_db[FIM_VID_FILENAME]= "the current file name" ;
fim_var_help_db[FIM_VID_FIM_DEFAULT_CONFIG_FILE_CONTENTS]= "the contents of the default (hardcoded) config file" ;
fim_var_help_db[FIM_VID_FRESH]= "1 if the image was loaded, before all autocommands execution (INTERNAL)" ;
fim_var_help_db[FIM_VID_OVERRIDE_DISPLAY]= "INTERNAL" ;
fim_var_help_db[FIM_VID_MAX_ITERATED_COMMANDS]= "the iteration limit for N in \"N[commandname]\" iterated command invocations" ;
fim_var_help_db[FIM_VID_MAGNIFY_FACTOR]= "the image scale multiplier used when magnifying images size" ;
fim_var_help_db[FIM_VID_PWD]= "the current working directory" ;
fim_var_help_db[FIM_VID_REDUCE_FACTOR]= "the image scale multiplier used when reducing images size" ;
fim_var_help_db[FIM_VID_SCALE_FACTOR_MULTIPLIER]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_SCALE_FACTOR_DELTA]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_STEPS]= "the steps, in pixels, when panning images" ;
fim_var_help_db[FIM_VID_CONSOLE_ROWS]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_CONSOLE_LINE_WIDTH]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_CONSOLE_LINE_OFFSET]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_CONSOLE_BUFFER_LINES]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_CONSOLE_BUFFER_TOTAL]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_CONSOLE_BUFFER_FREE]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_CONSOLE_BUFFER_USED]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_VERBOSE_KEYS]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_CONSOLE_KEY]= "the key binding for spawning the command line (INTERNAL)" ;
fim_var_help_db[FIM_VID_IGNORECASE]= "if 1, will allow for case insensitive regexp searches" ;
fim_var_help_db[FIM_VID_SAVE_FIM_HISTORY]= "if 1 on exit, will save the ~/fim_history file on exit" ;
fim_var_help_db[FIM_VID_LOAD_FIM_HISTORY]= "if 1 on startup, will load the ~/fim_history file on startup" ;
fim_var_help_db[FIM_VID_TERM]= "the environment TERM variable" ;
fim_var_help_db[FIM_VID_NO_DEFAULT_CONFIGURATION]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_DISPLAY_STATUS_BAR]= "if 1, will display the status bar" ;
fim_var_help_db[FIM_VID_DISPLAY_BUSY]= "if 1, will display a message on the status bar when processing" ;
fim_var_help_db[FIM_VID_SCALE]= "the scale of the current image" ;
fim_var_help_db[FIM_VID_ASCALE]= "the asymmetric scaling of the current image" ;
fim_var_help_db[FIM_VID_ANGLE]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_ORIENTATION]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_WIDTH]= "the current image original width" ;
fim_var_help_db[FIM_VID_HEIGHT]= "the current image original height" ;
fim_var_help_db[FIM_VID_SWIDTH]= "the current image scaled width" ;
fim_var_help_db[FIM_VID_SHEIGHT]= "the current image scaled height" ;
fim_var_help_db[FIM_VID_AUTOFLIP]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_AUTONEGATE]= "(INTERNAL) (EXPERIMENTAL)" ;
fim_var_help_db[FIM_VID_FLIPPED]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_NEGATED]= "(INTERNAL) (EXPERIMENTAL)" ;
fim_var_help_db[FIM_VID_FIM_BPP]= "the bits per pixel count" ;
fim_var_help_db[FIM_VID_AUTOMIRROR]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_MIRRORED]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_WANT_AUTOCENTER]= "(INTERNAL)" ;
fim_var_help_db[FIM_VID_MAX_CACHED_IMAGES]= "the maximum number of images allowed in the cache" ;
fim_var_help_db[FIM_VID_MAX_CACHED_MEMORY]= "the maximum amount of memory allowed for the cache" ;
fim_var_help_db[FIM_VID_CACHED_IMAGES]= "the number of images currently cached" ;
fim_var_help_db[FIM_VID_SCREEN_WIDTH]= "the screen width"  ;
fim_var_help_db[FIM_VID_SCREEN_HEIGHT]= "the screen height" ;
fim_var_help_db[FIM_VID_DBG_AUTOCMD_TRACE_STACK]= "(INTERNAL) dump to stdout autocommands stack trace during their execution (for debugging purposes)" ;
fim_var_help_db[FIM_VID_DBG_COMMANDS]= "(INTERNAL) each executed command (for debugging purposes)" ;
fim_var_help_db[FIM_VID_OPEN_OFFSET]= "(INTERNAL) offset used when opening files" ;
fim_var_help_db[FIM_VID_SEEK_MAGIC]= "(INTERNAL) will seek for a magic signature before opening a file (for now, use like this: fim -c '_seek_magic=MAGIC_STRING;push file_to_seek_in.ext' ) " ;
#endif
